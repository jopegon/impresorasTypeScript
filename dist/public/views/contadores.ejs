<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/bootstrapCss/bootstrap.min.css" />


    <script src="/jss/toolChart.js"></script>

    <!-- Chart.js -->
    <script src="/chartJs/chart.umd.js"></script>
    <script src="/chartJsAdapter/chartjs-adapter-date-fns.bundle.js"></script>
    <style>
        .chart-container {
            position: relative;
            height: 500px;
        }

        .divGrafico {
            min-width: 850px;
        }
    </style>
</head>

<body class="bg-light">


    <div class="mt-2 d-flex justify-content-center flex-wrap container-fluid">
        <span class="me-2">Número de días: </span>
        <select name="numDias" id="numDias">
            <option value="28">28</option>
            <option value="21">21</option>
            <option value="14">14</option>
            <option value="7" selected>7</option>
        </select>
    </div>

    <% for (let i=0; i < numeroGraficos; i++) { %>
        <div class="container py-4">
            <!-- Gráfico consumo -->
            <div class="row">
                <div class="col">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title text-center mb-3">Impresiones diarias <%=i+1%>. </h5>
                            <div class="chart-container">
                                <canvas id="chartNivelToner<%=i%>"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% } %>


            <!-- Datos ocultos -->
            <script id="chart-data-impresiones" type="application/json">
            <%- datasetsJSON %>
    </script>


            <!-- Script Chart.js -->
            <script>

                dataElement = document.getElementById('chart-data-impresiones');
                const datasets = JSON.parse(dataElement.textContent);
                let numeroGraficos = datasets.length / 8;

                numeroGraficos = Math.ceil(numeroGraficos);
                for (let j = 0; j < numeroGraficos; j++) {
                    const start = j * 8;
                    const end = start + 8;
                    const subsetDatasets = datasets.slice(start, end);
                    //console.log('Generando gráfico', j+1, 'con datasets desde', start, 'hasta', end-1);
                    crearChart(subsetDatasets, colors_8, 'chartNivelToner' + j, 'Fecha', 'Impresiones');
                }

            </script>


    <script>

        const urlActual = window.location.href;
        const match = urlActual.match(/\/(\d+)$/);

        if (match) {
            // match[1] contiene el número capturado (ej: "120")
            const valorDesdeURL = match[1];

            // 4. Obtener una referencia al elemento select
            const selectElement = document.getElementById('numDias');

            // 5. Establecer el valor del select para que coincida con el valor de la URL
            // Esto automáticamente selecciona la opción correspondiente.
            selectElement.value = valorDesdeURL;
        }


        // 1. Obtener una referencia al elemento select por su ID
        const selectElement = document.getElementById('numDias');

        // 2. Definir la base de la URL
        const baseUrl = `http://${window.location.hostname}:${window.location.port}/chart/`;

        // 3. Añadir el event listener para el evento 'change'
        selectElement.addEventListener('change', function () {

            const valorSeleccionado = this.value;

            // Redirigir la ventana a la URL construida
            window.location.href = baseUrl + valorSeleccionado;
        });  
    </script>


            <!-- Bootstrap JS , OJO  tiene que ir antes de 'Inicializa todos los tooltips'-->
            <script src="/bootStrapJs/bootstrap.bundle.min.js"></script>


            <script>
                // Inicializa todos los tooltips
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })
            </script>
</body>

</html>